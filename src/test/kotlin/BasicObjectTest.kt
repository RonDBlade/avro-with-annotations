import com.example.testsuite.BasicObject
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Test
import java.time.Instant

class BasicObjectTest {

    @DisplayName("Test conversion of stuff using explicit auto-typing.")
    @Test
    fun `test conversion of stuff`() {
        val data = BasicObject.newBuilder()
            .setPrimitive(1)
            .setNullablePrimitive(10 as Int?)
            .setString("value" as String?)
            .setNullableString("value2" as String?)
            .setAutoGeneratedJavaClass(Instant.ofEpochMilli(100) as Instant?)
            .setNullableAutoGeneratedJavaClass(Instant.ofEpochMilli(1000) as Instant?)
            .setUnionType(500 as Int?)
            .setNullableUnionType("500" as String?)
            .build();

        val primitive: Int = data.primitive
        val nullablePrimitive: Int? = data.nullablePrimitive
        val string: String = data.string
        val nullableString: String? = data.nullableString
        val autoGeneratedJavaClass: Instant = data.autoGeneratedJavaClass
        val nullableAutoGeneratedJavaClass: Instant = data.autoGeneratedJavaClass
        val unionType: Any = data.unionType
        val nullableUnionType: Any? = data.nullableUnionType
    }
}